- Limit comment replies
- Sort posts by everything (best, hot, new, controversial, top (all), rising)

Tree(0,
		[
		Tree(1,
			[Tree(1_1, [Tree(1_1_1)]), Tree(1_2)]),
		Tree(2,
				[Tree(2_1)]),
		Tree(3)

])

Tree(Parent,
        [
         Tree(1, [Tree(1a, [Tree(1aa)]), Tree(1b)]),
         Tree(2, [Tree(2a)]),
         Tree(3)
    ])



nodeList = [Tree('Test1'), Tree('2')]
node = Tree('Test', nodeList)


def print_comments(parent, parentName ):
    t = Tree('')
    branch = Tree('')
    for child in parent:
        if isinstance(child, MoreComments):
            continue
        try:
            print("PRE:\t" + child.body + "\t children: " + format(len(child.replies)) + "\n")
        except AttributeError:
            continue
        if len(child.replies) > 0:
            for grand in child.replies:
                if isinstance(grand, MoreComments):
                    continue
                try:
                    print("AFTER:\t" + grand.body + "\t children: " + format(
                        len(grand.replies)) + "\t" + child.body + "\n")
                    if len(grand.replies) > 0:
                        arrived_branch = print_comments(grand.replies)
                        #Ti mporei na erthei
                        # Tree(name, [Lista Tree])
                        #arrived_brand = Tree(1, [Tree(1a), Tree(1b)]
                        branch = Tree(grand.body, [arrived_branch])
                    else:
                        branch = Tree(grand.body)
                    print(
                        branch.name + "\n No. of children: " +
                        format(len(branch.children)))
                except AttributeError:
                    continue
        t.add_child(Tree(child.body))


    return t



def print_comments(parent, recList):

    t = Tree('')
    branch = Tree('')
    for child in parent:
        if isinstance(child, MoreComments):
            continue
        try:
            print(child.body)
            if len(child.replies) > 0:
                for reply in child.replies:
                    print(reply.body)

                    branch.add_child(Tree(reply.body))
                    recList = print_comments(reply.replies, recList)

                t = Tree(child.body, [branch])
            else:
                t = Tree(child.body)
            recList.append(t)
        except AttributeError:
            continue

    print(recList)
    return recList


 udo = Node("Udo")
        marc = Node("Marc", parent=udo)
        lian = Node("Lian", parent=marc)
        dan = Node("Dan", parent=udo)
        jet = Node("Jet", parent=dan)
        jan = Node("Jan", parent=dan)
        joe = Node("Joe", parent=dan)


        for pre, fill, node in RenderTree(udo):
            print("%s%s" % (pre, node.name))







l = QTreeWidgetItem(["String A"])
for i in range(3):
    l_child = QTreeWidgetItem(["Child A" + str(i)])
    for j in range(3):
        l_grand = QTreeWidgetItem(["Child B" + str(i)])
        l_child.addChild(l_grand)
    l.addChild(l_child)
self.ui.treeComments.addTopLevelItem(l)
#Thelei ALLO object gia neo kid
self.ui.treeComments.addTopLevelItem(r)















